version: '3.9'

services:
  ts-node-docker:
    build:
      context: Backend/Nodefications
      dockerfile: Dockerfile
      target: base
    volumes:
      - ./:/home/node/app/src
    container_name: ts-node-docker

    environment:
      - ConnectionServer=db
      - ConnectionPort=3306
      - api_url=http://q3-backend:5200
    expose:
      - '5300'
    ports:
      - '5300:5300'
    command: npm run prod

    networks:
      - custom-network

    depends_on:
      db:
        condition: service_healthy

  # Q3-Frontend:
  #   container_name: Q3-Frontend
  #   image: ${DOCKER_REGISTRY-}q3frontend
  #   build:
  #     context: Frontend/clientapp/
  #     dockerfile: Dockerfile

  #   ports:
  #     - "3000:80"
  #   volumes: 
  #     - "/app/node_modules"
  #     - "./:/app"

  #   environment:
  #     - API_URL=Q3-Backend:5000

  #   networks:
  #     - custom-network

  Q3-Backend:
    container_name: Q3-Backend
    image: ${DOCKER_REGISTRY-}q3backend
    build:
      context: Backend/Backend
      dockerfile: Dockerfile

    environment:
      - ASPNETCORE_URLS=http://+:5200
      - ConnectionString=server=db;port=3306;user=root;password=root;database=db;SslMode=None

    ports:
      - "5200:5200"
      - "5201:5201"

    networks:
      - custom-network

    depends_on:
      db:
        condition: service_healthy

  Q3-Sms:
    container_name: Q3-Sms
    image: ${DOCKER_REGISTRY-}q3sms
    build:
      context: Backend/telnyxApi
      dockerfile: Dockerfile

    environment:
      - ASPNETCORE_URLS=http://+:5100

    ports:
      - "5100:5100"
      - "5101:5101"

    networks:
      - custom-network

    depends_on:
      db:
        condition: service_healthy

  # Q3-Backend-Authentication:
  #   container_name: Q3-Backend-Authentication
  #   image: ${DOCKER_REGISTRY-}q3backendauthentication
  #   build:
  #     context: Backend/Authentication
  #     dockerfile: Authentication/Dockerfile

  #   environment:
  #     - ASPNETCORE_URLS=http://+:5100

  #   ports:
  #     - "5100:5100"
  #     - "5101:5101"

  #   networks:
  #     - custom-network

  db:
    image: mariadb:latest
    container_name: Q3_Database
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./Databases/Q3_Data/data:/docker-entrypoint-initdb.d
    environment:
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'root'
      MYSQL_DATABASE: 'db'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - "3307:3306"

    networks:
      - custom-network

    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 5s
      retries: 10

  # mysql-db-q3-authentication:
  #   image: mysql:latest
  #   container_name: Mysql-Database-Authentication
  #   command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
  #   volumes: 
  #     - ./Databases/Authentication/data:/docker-entrypoint-initdb.d
  #   environment:
  #     MYSQL_USER: user
  #     MYSQL_PASSWORD: root
  #     MYSQL_DATABASE: authentication
  #     MYSQL_ROOT_PASSWORD: root
  #   ports:
  #     - "3307:3307"

  #   networks:
  #     - custom-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: Phpmyadmin
    links:
      - db
    environment:
      PMA_HOST: db
    restart: always
    ports:
      - 8080:80

    networks:
      - custom-network

networks:
  custom-network:
    driver: bridge
