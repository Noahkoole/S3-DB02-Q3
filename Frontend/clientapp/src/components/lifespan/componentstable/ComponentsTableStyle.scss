@import "../../../variables";

.lifespan-table {
    width: 95%;
    height: 100%;
    // display: grid;
    margin-top: 2rem;
    grid-auto-rows: 50px;
    overflow-y: auto;
    scroll-padding-top: 5rem;
    overflow-x: hidden;

    button:hover {
        background: none !important;
    }

    .grey,
    .green,
    .orange,
    .red {
        font-size: 1.5rem;
    }

    .green {
        color: map-get($map: $accent-colors, $key: "green");
    }

    .orange {
        color: map-get($map: $accent-colors, $key: "orange");
    }

    .red {
        color: map-get($map: $accent-colors, $key: "red");
    }

    .MuiDataGrid-columnHeader:last-child {
        .MuiDataGrid-columnSeparator {
            display: none;
        }
    }

    .row:first-child {
        position: sticky;
        top: 0;
        background-color: white;
        z-index: 1;
        box-shadow: 0 4px 4px rgba($color: #000000, $alpha: 0.25);
    }

    .row:not(:first-child) {
        &:hover {
            background-color: rgba($color: #000000, $alpha: 0.15);
            cursor: pointer;
        }

        div:first-child {
            padding-left: 2rem;
        }

        p:first-child,
        div:first-child {
            position: relative;
            // justify-content: center;

            &:before {
                left: 0;
                @include line-padding;
            }
        }

        p:last-child {
            position: relative;
            &:before {
                right: 0;
                @include line-padding;
            }
        }
    }

    .row {
        display: grid;
        grid-template-columns: 10% auto 20% 15% 15%;
        border-bottom: 1px solid black;

        p,
        div {
            margin: 0;
            display: flex;
            align-items: center;
        }

        &:first-child {
            p,
            div {
                font-weight: 900;
            }
        }

        p:first-child {
            margin-left: 1rem;
        }

        svg {
            font-size: 1.5em;
        }

        .green {
            color: map-get($map: $accent-colors, $key: "green");
        }

        .orange {
            color: map-get($map: $accent-colors, $key: "orange");
        }

        .red {
            color: map-get($map: $accent-colors, $key: "red");
        }
    }
}

#Lifespan-Search {
    margin-right: 0.5rem;
    &-Spacer {
        margin-left: 0.5rem;
    }
}

.LsDataGrid :focus {
    outline: none !important;
}

.LS-Header-Description {
    display: flex;
    flex-direction: row;
    width: 90%;
    z-index: 10;

    > b {
        margin-right: 1rem;
    }

    > input {
        margin-right: auto;
    }
}

.CircularProgress {
    color: map-get($map: $background, $key: "blue") !important;
}

.Predict-Text {
    color: rgba($color: #000000, $alpha: 0.5);
}

.Predict-Text,
.CircularProgress {
    padding: 0 10px;
}
